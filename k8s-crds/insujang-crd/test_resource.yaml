apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must be in the form: <spec.plural>.<group>.
  name: testresources.insujang.github.io
spec:
  # group name to use for REST API: /apis/<spec.group>/<spec.version>
  # This example a format of REST API would be: /apis/insujang.github.io/v1beta1
  # apiVersion in yaml files to create this CRD type should be same with this value.
  group: insujang.github.io
  names:
    kind: TestResource
    listKind: TestResourceList
    # plural name to be used in the URL: /apis/<spec.group>/<spec.version>/<plural>
    # This example a format of the URL would be: /apis/insujang.github.io/v1beta1/testresources
    plural: testresources
    # signalur name to be used as an alias on the CLI and for the display
    singular: testresource
  # either "Namespaced" or "Cluster" (unnamespaced object such as CRD itself).
  # You can specify which resources in a namespace by $ kubectl api-resources --namespaced=true
  # or not in a namespace by $ kubectl api-resources --namespaced=false.
  scope: Namespaced
  subresources:
    status: {}
  # By specifying OpenAPI v3.0 validation schema, we can add some restrictions on CRD objects,
  # such like any objects with this CRD type are required to have some properties,
  # or its pattern should be match with a regular expression, etc. [^5]
  # This CRD requires to have two properties: "command" and "custom_property".
  validation:
    openAPIV3Schema:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            command:
              type: string
            customProperty:
              type: string
              pattern: "thisshouldmatchwiththisstring"
          required:
          - command
          - customProperty
          type: object
      required:
      - apiVersion
      - kind
      - spec
  versions:
  - name: v1beta1
    # Each version can be enabled/disabled by served flag.
    served: true
    # OPne any only one version must be marked as the storage version.
    storage: true